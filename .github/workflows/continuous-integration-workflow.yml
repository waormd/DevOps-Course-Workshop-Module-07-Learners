name: Continuous Integration
on: [push]                    # Will make the workflow run every time you push to any branch

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    steps:
    - uses: actions/checkout@v2 # Adds a step to checkout the repository code
    - uses: actions/setup-dotnet@v1 # Adds a step to checkout the repository code
      with:
        dotnet-version: '3.1.x'
    - uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: build
      run: dotnet build
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    
    - name: test
      run: dotnet test
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: npm ci
      run: npm ci
      working-directory: ./DotnetTemplate.Web
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: npm build
      run: npm run build
      working-directory: ./DotnetTemplate.Web
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: npm lint
      run: npm run lint
      working-directory: ./DotnetTemplate.Web
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: npm test
      run: npm t
      working-directory: ./DotnetTemplate.Web
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
