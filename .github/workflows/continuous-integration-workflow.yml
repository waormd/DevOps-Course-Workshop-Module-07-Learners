name: Continuous Integration
on: [push]                    # Will make the workflow run every time you push to any branch

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
    steps:
    - uses: actions/checkout@v2 # Adds a step to checkout the repository code
    - uses: actions/setup-dotnet@v1 # Adds a step to checkout the repository code
      with:
        dotnet-version: '3.1.x'
    - uses: actions/setup-node@v1
      with:
        node-version: '14'
    - uses: act10ns/slack@v1
      with:
        status: starting
      if: always()

    - name: dotnet build
      run: dotnet build
    
    - name: dotnet test
      id: dotnet-test
      run: dotnet test

    - name: npm ci
      run: npm ci
      working-directory: ./DotnetTemplate.Web

    - name: npm build
      run: npm run build
      working-directory: ./DotnetTemplate.Web

    - name: npm lint
      run: npm run lint
      working-directory: ./DotnetTemplate.Web

    - name: npm test
      id: npm-test
      run: npm t
      working-directory: ./DotnetTemplate.Web

    - name: build and publish
      id: build-and-publish-docker
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: waormd/dotnet-template
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: push to heroku
      if: github.ref == 'refs/heads/main'
      id: push-to-heroku
      uses: akhileshns/heroku-deploy@v3.6.8 
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "dotnet-template-yes" 
        heroku_email: "waormd@gmail.com"

    - name: health check heroku deploy
      uses: jtalk/url-health-check-action@v1.2
      if: github.ref == 'refs/heads/main'
      with:
        url: https://dotnet-template-yes.herokuapp.com
        max-attempts: 3
        retry-delay: 5s

    - uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
      if: always()